<ManagementPackFragment SchemaVersion="SM2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
 

  <Categories>
    <!-- We must specify the management pack as a SCSM type, else the tasks won't be shown (they would be perceived as SCOM tasks and hidden) -->
    <Category ID="Custom.SM.Incident.ChangeStatus.MP.CATEGORY_MP" Value="MESUC!Microsoft.EnterpriseManagement.ServiceManager.ManagementPack">
      <ManagementPackName>Custom.SM.Incident.ChangeStatus.MP</ManagementPackName>
      <ManagementPackVersion>1.0.0.40</ManagementPackVersion>
      <ManagementPackPublicKeyToken>1e1eb76c7a2df9e9</ManagementPackPublicKeyToken>
    </Category>
    <!-- The next four categories are used to hide the standard tasks which the custom one replaces -->
    <Category ID="Custom.SM.Incident.ChangeStatus.MP.CATEGORY_HIDEConsole" Target="SIL!System.WorkItem.Incident.StatusGroup.Task" Value="MESUC!Microsoft.EnterpriseManagement.ServiceManager.UI.Console.DonotShowConsoleTask" />
    <Category ID="Custom.SM.Incident.ChangeStatus.MP.CATEGORY_HIDEForm" Target="SIL!System.WorkItem.Incident.StatusGroup.Task" Value="MESUC!Microsoft.EnterpriseManagement.ServiceManager.UI.Console.DonotShowFormTask" />
    <Category ID="Custom.SM.Incident.ChangeStatus.MP.CATEGORY_HIDEConsole2" Target="SIL!System.WorkItem.Incident.ChangeStatusCommand.Task" Value="MESUC!Microsoft.EnterpriseManagement.ServiceManager.UI.Console.DonotShowConsoleTask" />
    <Category ID="Custom.SM.Incident.ChangeStatus.MP.CATEGORY_HIDEForm2" Target="SIL!System.WorkItem.Incident.ChangeStatusCommand.Task" Value="MESUC!Microsoft.EnterpriseManagement.ServiceManager.UI.Console.DonotShowFormTask" />
   
  
  </Categories>
  <Presentation>
    <ConsoleTasks>
      <!-- This is the actual task definition for the custom form, it refers to the assembly we define later on so that it gets initialized when the users launches the task-->
      <ConsoleTask ID="Custom.SM.Incident.ChangeStatus.MP.T_Update" Target="SWIL!System.WorkItem.Incident" Accessibility="Public" RequireOutput="false">
        <Assembly>MESUC!SdkDataAccessAssembly</Assembly>
        <Handler>Microsoft.EnterpriseManagement.UI.SdkDataAccess.ConsoleTaskHandler</Handler>
        <Parameters>
          <Argument Name="Assembly">Custom.SM.Incident.ChangeStatus.UI</Argument>
          <Argument Name="Type">Custom.SM.Incident.ChangeStatus.UI.ConsoleTask</Argument>
     
        </Parameters>
      </ConsoleTask>
     
    </ConsoleTasks>
    <Views>

    </Views>

    <ImageReferences>
      <!-- We assign a standard image icon of the original task to our custom one (great artists steal :)-->
      <ImageReference ElementID="Custom.SM.Incident.ChangeStatus.MP.T_Update" ImageID="SIL!IncidentMgmt_IncidentStatusChange_16"/>
    </ImageReferences>
  </Presentation>

  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <!-- To make the task user-friendly, we assign a displayname to it-->
        <DisplayString ElementID="Custom.SM.Incident.ChangeStatus.MP.T_Update">
          <Name>Change Status</Name>
        </DisplayString>
       
      </DisplayStrings>
      
    </LanguagePack>
  </LanguagePacks>
  <Resources>
    <!-- Here we define that we want to include a custom library in our management pack. It is important to reference the library project (that contains the task handler and GUI) in Visual Studio (it needs to be a project in the same solution as the MP), and to set the 'package to bundle' property to true -->
    <Assembly ID="Custom.SM.Incident.ChangeStatus.MP.ASS_Base" FileName="Custom.SM.Incident.ChangeStatus.UI.dll" QualifiedName="Custom.SM.Incident.ChangeStatus.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Accessibility="Public" />
  </Resources>
  
</ManagementPackFragment>
