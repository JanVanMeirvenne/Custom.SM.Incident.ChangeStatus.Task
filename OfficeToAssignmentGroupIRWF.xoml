<SequentialWorkflowActivity x:Class="WorkflowAuthoring.OfficeToAssignmentGroupIRWF" x:Name="OfficeToAssignmentGroupIRWF" xmlns:ns0="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WindowsPowerShellScript Parameter="{x:Null}" SnapIns="{x:Null}" x:Name="OfficeToAssignmentGroupIRScript" PropertyToBind="{x:Null}" ScriptBody="get-module|Remove-Module -force&#xD;&#xA;Set-PSDebug -Strict&#xD;&#xA;[threading.thread]::CurrentThread.CurrentCulture = 'en-US'&#xD;&#xA;$Global:Log = &quot;&quot;&#xD;&#xA;function Log($Message){&#xD;&#xA;    if($Global:Log -eq &quot;&quot;){&#xD;&#xA;        New-EventLog -LogName 'Operations Manager' -Source 'Custom' -ErrorAction SilentlyContinue&#xD;&#xA;        $Global:Log = &quot;$Message`r`n&quot;&#xD;&#xA;    } else {&#xD;&#xA;        $Global:Log += &quot;$Message`r`n&quot;&#xD;&#xA;    } &#xD;&#xA;    Write-Output $Message&#xD;&#xA;}&#xD;&#xA;try{&#xD;&#xA;    Import-Module smlets -Force -Global&#xD;&#xA;    Log 'Office To Assignment Group Workflow (IR) Started'&#xD;&#xA;    $Office = $null&#xD;&#xA;  # $GUID = 'dbc0f104-cf79-e135-7911-3116b03bd454'&#xD;&#xA;    Log &quot;Ticket GUID: $GUID&quot;&#xD;&#xA;    $Ticket = Get-SCSMObject -Id $GUID&#xD;&#xA;    Log &quot;Ticket ID: $($Ticket.Name)&quot;&#xD;&#xA;    $UserClass = Get-SCSMClass -Name 'System.Domain.User'&#xD;&#xA;&#xD;&#xA;    $Relationship = Get-SCSMRelationshipClass -Name 'System.WorkItemAffectedUser'&#xD;&#xA;&#xD;&#xA;    $AffectedUser = Get-SCSMRelatedObject -SMObject $Ticket -Relationship $Relationship&#xD;&#xA;    if($AffectedUser -ne $null){&#xD;&#xA;        Log &quot;Affected User: $($AffectedUser.DisplayName) with Office '$($AffectedUser.Office)'&quot;&#xD;&#xA;        if(($($AffectedUser.Office) -eq $null) -or ($($AffectedUser.Office -eq &quot;&quot;))){&#xD;&#xA;            $Office = 'Leave Empty'&#xD;&#xA;        } else {&#xD;&#xA;            $Office = ($($AffectedUser.Office))&#xD;&#xA;        }&#xD;&#xA;    } else { Log &quot;No Affected User found, using default Office value&quot;;$Office = 'Leave Empty'}&#xD;&#xA;        $ConfigList = Get-SCSMObject -Class (get-scsmclass -name 'custom.sm.officetoassignmentgroup.mp.c_incidentsetting') -Filter &quot;A_Office = '$Office'&quot;&#xD;&#xA;        if($ConfigList -ne $null){&#xD;&#xA;            Log &quot;Found Setting: Office -&gt; $($ConfigList.A_Office), User -&gt; $($ConfigList.A_UserGroupString), Tier -&gt; $($ConfigList.A_TierString)&quot;&#xD;&#xA;            &#xD;&#xA;            if([Guid] $ConfigList.A_Tier -ne [Guid]::Empty){&#xD;&#xA;                $Tier = Get-SCSMEnumeration -id $ConfigList.A_Tier&#xD;&#xA;                Set-SCSMObject -PropertyHashtable @{&quot;TierQueue&quot;=$ConfigList.A_Tier} -SMObject $Ticket&#xD;&#xA;&#xD;&#xA;              &#xD;&#xA;            }&#xD;&#xA;            if([Guid] $ConfigList.A_UserGroup -ne [Guid]::Empty){&#xD;&#xA;                 $AssignRelation = Get-SCSMRelationshipClass -name System.WorkItemAssignedToUser$&#xD;&#xA;                 $AssignUser = Get-SCSMObject -Id $ConfigList.A_UserGroup&#xD;&#xA;                 New-SCSMRelationshipObject -Source $Ticket -Relationship $AssignRelation -Target $AssignUser -Bulk&#xD;&#xA;            }&#xD;&#xA;           &#xD;&#xA;           &#xD;&#xA;             &#xD;&#xA;            &#xD;&#xA;            Log &quot;Ticket Updated&quot;&#xD;&#xA;        } else {&#xD;&#xA;            Log &quot;No Setting found&quot;&#xD;&#xA;        }&#xD;&#xA;       &#xD;&#xA;            &#xD;&#xA;       &#xD;&#xA;} catch {&#xD;&#xA;    Log &quot;Error: $_&quot;&#xD;&#xA;} finally {&#xD;&#xA;    Log &quot;Workflow ended&quot;&#xD;&#xA;    Write-EventLog -LogName 'Operations Manager' -Source 'Custom' -EntryType Information -Message $Global:Log -EventId 0&#xD;&#xA;&#xD;&#xA;    Get-Module|Remove-Module -Force&#xD;&#xA;    &#xD;&#xA;}" TaskID="OfficeToAssignmentGroupIRWF.WindowsPowerShellScript.1cc6771d_2022_4891_b61c_797ce410c8b0" ScriptName="{x:Null}">
		<ns0:WindowsPowerShellScript.Parameters>
			<x:Array Type="{x:Type p7:ActivityParameter}" xmlns:p7="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.Common;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.Common, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
				<ns1:ActivityParameter Key="GUID" BindPath="{ActivityBind OfficeToAssignmentGroupIRWF,Path=OfficeToAssignmentGroupIRScript_GUID}" Value="Activity=OfficeToAssignmentGroupIRWF, Path=OfficeToAssignmentGroupIRScript_GUID" xmlns:ns1="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.Common;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.Common, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
			</x:Array>
		</ns0:WindowsPowerShellScript.Parameters>
	</ns0:WindowsPowerShellScript>
</SequentialWorkflowActivity>